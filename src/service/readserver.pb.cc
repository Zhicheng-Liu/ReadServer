// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: readserver.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "readserver.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_ReturnType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ReadInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReadInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultSamples_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultSamples_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultAll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultAll_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ResultReads_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ResultReads_reflection_ = NULL;
const ::google::protobuf::Descriptor* Reply_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Reply_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Reply_RequestType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Reply_ReplyType_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ReplyAll_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyAll_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyCount_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyCount_reflection_ = NULL;
const ::google::protobuf::Descriptor* ReplyReads_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ReplyReads_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_readserver_2eproto() {
  protobuf_AddDesc_readserver_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "readserver.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, rt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, k_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, s_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, p_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, isalt_),
  };
  Request_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      -1,
      -1,
      sizeof(Request),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _internal_metadata_),
      -1);
  Request_RequestType_descriptor_ = Request_descriptor_->enum_type(0);
  Request_ReturnType_descriptor_ = Request_descriptor_->enum_type(1);
  ReadInfo_descriptor_ = file->message_type(1);
  static const int ReadInfo_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadInfo, g_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadInfo, c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadInfo, l_),
  };
  ReadInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReadInfo_descriptor_,
      ReadInfo::default_instance_,
      ReadInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReadInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReadInfo, _internal_metadata_),
      -1);
  ResultSamples_descriptor_ = file->message_type(2);
  static const int ResultSamples_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultSamples, s_),
  };
  ResultSamples_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultSamples_descriptor_,
      ResultSamples::default_instance_,
      ResultSamples_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultSamples, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResultSamples),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultSamples, _internal_metadata_),
      -1);
  ResultAll_descriptor_ = file->message_type(3);
  static const int ResultAll_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultAll, r_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultAll, s_),
  };
  ResultAll_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultAll_descriptor_,
      ResultAll::default_instance_,
      ResultAll_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultAll, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResultAll),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultAll, _internal_metadata_),
      -1);
  ResultCount_descriptor_ = file->message_type(4);
  static const int ResultCount_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultCount, c_),
  };
  ResultCount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultCount_descriptor_,
      ResultCount::default_instance_,
      ResultCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultCount, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResultCount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultCount, _internal_metadata_),
      -1);
  ResultReads_descriptor_ = file->message_type(5);
  static const int ResultReads_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReads, r_),
  };
  ResultReads_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ResultReads_descriptor_,
      ResultReads::default_instance_,
      ResultReads_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReads, _has_bits_[0]),
      -1,
      -1,
      sizeof(ResultReads),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ResultReads, _internal_metadata_),
      -1);
  Reply_descriptor_ = file->message_type(6);
  static const int Reply_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, rt_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, q_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, c_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, r_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, a_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, s_),
  };
  Reply_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Reply_descriptor_,
      Reply::default_instance_,
      Reply_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _has_bits_[0]),
      -1,
      -1,
      sizeof(Reply),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reply, _internal_metadata_),
      -1);
  Reply_RequestType_descriptor_ = Reply_descriptor_->enum_type(0);
  Reply_ReplyType_descriptor_ = Reply_descriptor_->enum_type(1);
  ReplyAll_descriptor_ = file->message_type(7);
  static const int ReplyAll_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyAll, forward_matches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyAll, revcomp_matches_),
  };
  ReplyAll_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReplyAll_descriptor_,
      ReplyAll::default_instance_,
      ReplyAll_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyAll, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReplyAll),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyAll, _internal_metadata_),
      -1);
  ReplyCount_descriptor_ = file->message_type(8);
  static const int ReplyCount_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyCount, forward_matches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyCount, revcomp_matches_),
  };
  ReplyCount_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReplyCount_descriptor_,
      ReplyCount::default_instance_,
      ReplyCount_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyCount, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReplyCount),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyCount, _internal_metadata_),
      -1);
  ReplyReads_descriptor_ = file->message_type(9);
  static const int ReplyReads_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyReads, forward_matches_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyReads, revcomp_matches_),
  };
  ReplyReads_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ReplyReads_descriptor_,
      ReplyReads::default_instance_,
      ReplyReads_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyReads, _has_bits_[0]),
      -1,
      -1,
      sizeof(ReplyReads),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ReplyReads, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_readserver_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReadInfo_descriptor_, &ReadInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultSamples_descriptor_, &ResultSamples::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultAll_descriptor_, &ResultAll::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultCount_descriptor_, &ResultCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ResultReads_descriptor_, &ResultReads::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Reply_descriptor_, &Reply::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReplyAll_descriptor_, &ReplyAll::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReplyCount_descriptor_, &ReplyCount::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ReplyReads_descriptor_, &ReplyReads::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_readserver_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete ReadInfo::default_instance_;
  delete ReadInfo_reflection_;
  delete ResultSamples::default_instance_;
  delete ResultSamples_reflection_;
  delete ResultAll::default_instance_;
  delete ResultAll_reflection_;
  delete ResultCount::default_instance_;
  delete ResultCount_reflection_;
  delete ResultReads::default_instance_;
  delete ResultReads_reflection_;
  delete Reply::default_instance_;
  delete Reply_reflection_;
  delete ReplyAll::default_instance_;
  delete ReplyAll_reflection_;
  delete ReplyCount::default_instance_;
  delete ReplyCount_reflection_;
  delete ReplyReads::default_instance_;
  delete ReplyReads_reflection_;
}

void protobuf_AddDesc_readserver_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020readserver.proto\"\230\002\n\007Request\022\037\n\001t\030\001 \002("
    "\0162\024.Request.RequestType\022\037\n\002rt\030\002 \002(\0162\023.Re"
    "quest.ReturnType\022\t\n\001q\030\003 \002(\t\022\t\n\001k\030\004 \001(\005\022\t"
    "\n\001s\030\005 \001(\005\022\t\n\001p\030\006 \001(\005\022\t\n\001a\030\007 \001(\t\022\r\n\005isalt"
    "\030\010 \001(\005\"K\n\013RequestType\022\016\n\nCountReads\020\001\022\016\n"
    "\nExactMatch\020\002\022\r\n\tKmerMatch\020\003\022\r\n\tSiteMatc"
    "h\020\004\"8\n\nReturnType\022\t\n\005Count\020\001\022\t\n\005Reads\020\002\022"
    "\007\n\003All\020\003\022\013\n\007Samples\020\004\"+\n\010ReadInfo\022\t\n\001g\030\001"
    " \002(\t\022\t\n\001c\030\002 \002(\005\022\t\n\001l\030\003 \002(\005\"%\n\rResultSamp"
    "les\022\024\n\001s\030\001 \003(\0132\t.ReadInfo\",\n\tResultAll\022\t"
    "\n\001r\030\001 \002(\t\022\024\n\001s\030\002 \003(\0132\t.ReadInfo\"\030\n\013Resul"
    "tCount\022\t\n\001c\030\001 \002(\005\"\030\n\013ResultReads\022\t\n\001r\030\001 "
    "\002(\t\"\313\002\n\005Reply\022\036\n\002rt\030\001 \002(\0162\022.Reply.Reques"
    "tType\022\033\n\001t\030\002 \002(\0162\020.Reply.ReplyType\022\t\n\001q\030"
    "\003 \002(\t\022\026\n\001c\030\004 \001(\0132\013.ReplyCount\022\026\n\001r\030\005 \001(\013"
    "2\013.ReplyReads\022\024\n\001a\030\006 \001(\0132\t.ReplyAll\022\031\n\001s"
    "\030\007 \001(\0132\016.ResultSamples\"K\n\013RequestType\022\016\n"
    "\nCountReads\020\001\022\016\n\nExactMatch\020\002\022\r\n\tKmerMat"
    "ch\020\003\022\r\n\tSiteMatch\020\004\"L\n\tReplyType\022\016\n\nRepl"
    "yCount\020\001\022\016\n\nReplyReads\020\002\022\014\n\010ReplyAll\020\003\022\021"
    "\n\rResultSamples\020\004\"T\n\010ReplyAll\022#\n\017forward"
    "_matches\030\001 \003(\0132\n.ResultAll\022#\n\017revcomp_ma"
    "tches\030\002 \003(\0132\n.ResultAll\"Z\n\nReplyCount\022%\n"
    "\017forward_matches\030\001 \001(\0132\014.ResultCount\022%\n\017"
    "revcomp_matches\030\002 \001(\0132\014.ResultCount\"Z\n\nR"
    "eplyReads\022%\n\017forward_matches\030\001 \003(\0132\014.Res"
    "ultReads\022%\n\017revcomp_matches\030\002 \003(\0132\014.Resu"
    "ltReads", 1087);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "readserver.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  ReadInfo::default_instance_ = new ReadInfo();
  ResultSamples::default_instance_ = new ResultSamples();
  ResultAll::default_instance_ = new ResultAll();
  ResultCount::default_instance_ = new ResultCount();
  ResultReads::default_instance_ = new ResultReads();
  Reply::default_instance_ = new Reply();
  ReplyAll::default_instance_ = new ReplyAll();
  ReplyCount::default_instance_ = new ReplyCount();
  ReplyReads::default_instance_ = new ReplyReads();
  Request::default_instance_->InitAsDefaultInstance();
  ReadInfo::default_instance_->InitAsDefaultInstance();
  ResultSamples::default_instance_->InitAsDefaultInstance();
  ResultAll::default_instance_->InitAsDefaultInstance();
  ResultCount::default_instance_->InitAsDefaultInstance();
  ResultReads::default_instance_->InitAsDefaultInstance();
  Reply::default_instance_->InitAsDefaultInstance();
  ReplyAll::default_instance_->InitAsDefaultInstance();
  ReplyCount::default_instance_->InitAsDefaultInstance();
  ReplyReads::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_readserver_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_readserver_2eproto {
  StaticDescriptorInitializer_readserver_2eproto() {
    protobuf_AddDesc_readserver_2eproto();
  }
} static_descriptor_initializer_readserver_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_RequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_RequestType_descriptor_;
}
bool Request_RequestType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_RequestType Request::CountReads;
const Request_RequestType Request::ExactMatch;
const Request_RequestType Request::KmerMatch;
const Request_RequestType Request::SiteMatch;
const Request_RequestType Request::RequestType_MIN;
const Request_RequestType Request::RequestType_MAX;
const int Request::RequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Request_ReturnType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_ReturnType_descriptor_;
}
bool Request_ReturnType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Request_ReturnType Request::Count;
const Request_ReturnType Request::Reads;
const Request_ReturnType Request::All;
const Request_ReturnType Request::Samples;
const Request_ReturnType Request::ReturnType_MIN;
const Request_ReturnType Request::ReturnType_MAX;
const int Request::ReturnType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Request::kTFieldNumber;
const int Request::kRtFieldNumber;
const int Request::kQFieldNumber;
const int Request::kKFieldNumber;
const int Request::kSFieldNumber;
const int Request::kPFieldNumber;
const int Request::kAFieldNumber;
const int Request::kIsaltFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Request::Request()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Request)
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Request)
}

void Request::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  t_ = 1;
  rt_ = 1;
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  k_ = 0;
  s_ = 0;
  p_ = 0;
  a_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  isalt_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  // @@protoc_insertion_point(destructor:Request)
  SharedDtor();
}

void Request::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  a_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New(::google::protobuf::Arena* arena) const {
  Request* n = new Request;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Request::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Request*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 255u) {
    ZR_(k_, s_);
    ZR_(p_, isalt_);
    t_ = 1;
    rt_ = 1;
    if (has_q()) {
      q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_a()) {
      a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Request)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Request.RequestType t = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Request_RequestType_IsValid(value)) {
            set_t(static_cast< ::Request_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_rt;
        break;
      }

      // required .Request.ReturnType rt = 2;
      case 2: {
        if (tag == 16) {
         parse_rt:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Request_ReturnType_IsValid(value)) {
            set_rt(static_cast< ::Request_ReturnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_q;
        break;
      }

      // required string q = 3;
      case 3: {
        if (tag == 26) {
         parse_q:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_q()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->q().data(), this->q().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Request.q");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_k;
        break;
      }

      // optional int32 k = 4;
      case 4: {
        if (tag == 32) {
         parse_k:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &k_)));
          set_has_k();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_s;
        break;
      }

      // optional int32 s = 5;
      case 5: {
        if (tag == 40) {
         parse_s:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &s_)));
          set_has_s();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_p;
        break;
      }

      // optional int32 p = 6;
      case 6: {
        if (tag == 48) {
         parse_p:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &p_)));
          set_has_p();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_a;
        break;
      }

      // optional string a = 7;
      case 7: {
        if (tag == 58) {
         parse_a:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_a()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->a().data(), this->a().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Request.a");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_isalt;
        break;
      }

      // optional int32 isalt = 8;
      case 8: {
        if (tag == 64) {
         parse_isalt:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &isalt_)));
          set_has_isalt();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Request)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Request)
  return false;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Request)
  // required .Request.RequestType t = 1;
  if (has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->t(), output);
  }

  // required .Request.ReturnType rt = 2;
  if (has_rt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->rt(), output);
  }

  // required string q = 3;
  if (has_q()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->q().data(), this->q().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Request.q");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->q(), output);
  }

  // optional int32 k = 4;
  if (has_k()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->k(), output);
  }

  // optional int32 s = 5;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->s(), output);
  }

  // optional int32 p = 6;
  if (has_p()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->p(), output);
  }

  // optional string a = 7;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Request.a");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->a(), output);
  }

  // optional int32 isalt = 8;
  if (has_isalt()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(8, this->isalt(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Request)
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Request)
  // required .Request.RequestType t = 1;
  if (has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->t(), target);
  }

  // required .Request.ReturnType rt = 2;
  if (has_rt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->rt(), target);
  }

  // required string q = 3;
  if (has_q()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->q().data(), this->q().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Request.q");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->q(), target);
  }

  // optional int32 k = 4;
  if (has_k()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->k(), target);
  }

  // optional int32 s = 5;
  if (has_s()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->s(), target);
  }

  // optional int32 p = 6;
  if (has_p()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->p(), target);
  }

  // optional string a = 7;
  if (has_a()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->a().data(), this->a().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Request.a");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->a(), target);
  }

  // optional int32 isalt = 8;
  if (has_isalt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(8, this->isalt(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Request)
  return target;
}

int Request::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_t()) {
    // required .Request.RequestType t = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->t());
  }

  if (has_rt()) {
    // required .Request.ReturnType rt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rt());
  }

  if (has_q()) {
    // required string q = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->q());
  }

  return total_size;
}
int Request::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .Request.RequestType t = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->t());

    // required .Request.ReturnType rt = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rt());

    // required string q = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->q());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 248u) {
    // optional int32 k = 4;
    if (has_k()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->k());
    }

    // optional int32 s = 5;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->s());
    }

    // optional int32 p = 6;
    if (has_p()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->p());
    }

    // optional string a = 7;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->a());
    }

    // optional int32 isalt = 8;
    if (has_isalt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->isalt());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Request* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Request>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_t()) {
      set_t(from.t());
    }
    if (from.has_rt()) {
      set_rt(from.rt());
    }
    if (from.has_q()) {
      set_has_q();
      q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
    }
    if (from.has_k()) {
      set_k(from.k());
    }
    if (from.has_s()) {
      set_s(from.s());
    }
    if (from.has_p()) {
      set_p(from.p());
    }
    if (from.has_a()) {
      set_has_a();
      a_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.a_);
    }
    if (from.has_isalt()) {
      set_isalt(from.isalt());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Request::Swap(Request* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Request::InternalSwap(Request* other) {
  std::swap(t_, other->t_);
  std::swap(rt_, other->rt_);
  q_.Swap(&other->q_);
  std::swap(k_, other->k_);
  std::swap(s_, other->s_);
  std::swap(p_, other->p_);
  a_.Swap(&other->a_);
  std::swap(isalt_, other->isalt_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Request

// required .Request.RequestType t = 1;
bool Request::has_t() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Request::set_has_t() {
  _has_bits_[0] |= 0x00000001u;
}
void Request::clear_has_t() {
  _has_bits_[0] &= ~0x00000001u;
}
void Request::clear_t() {
  t_ = 1;
  clear_has_t();
}
 ::Request_RequestType Request::t() const {
  // @@protoc_insertion_point(field_get:Request.t)
  return static_cast< ::Request_RequestType >(t_);
}
 void Request::set_t(::Request_RequestType value) {
  assert(::Request_RequestType_IsValid(value));
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:Request.t)
}

// required .Request.ReturnType rt = 2;
bool Request::has_rt() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Request::set_has_rt() {
  _has_bits_[0] |= 0x00000002u;
}
void Request::clear_has_rt() {
  _has_bits_[0] &= ~0x00000002u;
}
void Request::clear_rt() {
  rt_ = 1;
  clear_has_rt();
}
 ::Request_ReturnType Request::rt() const {
  // @@protoc_insertion_point(field_get:Request.rt)
  return static_cast< ::Request_ReturnType >(rt_);
}
 void Request::set_rt(::Request_ReturnType value) {
  assert(::Request_ReturnType_IsValid(value));
  set_has_rt();
  rt_ = value;
  // @@protoc_insertion_point(field_set:Request.rt)
}

// required string q = 3;
bool Request::has_q() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Request::set_has_q() {
  _has_bits_[0] |= 0x00000004u;
}
void Request::clear_has_q() {
  _has_bits_[0] &= ~0x00000004u;
}
void Request::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_q();
}
 const ::std::string& Request::q() const {
  // @@protoc_insertion_point(field_get:Request.q)
  return q_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_q(const ::std::string& value) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.q)
}
 void Request::set_q(const char* value) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.q)
}
 void Request::set_q(const char* value, size_t size) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.q)
}
 ::std::string* Request::mutable_q() {
  set_has_q();
  // @@protoc_insertion_point(field_mutable:Request.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_q() {
  clear_has_q();
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    set_has_q();
  } else {
    clear_has_q();
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:Request.q)
}

// optional int32 k = 4;
bool Request::has_k() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Request::set_has_k() {
  _has_bits_[0] |= 0x00000008u;
}
void Request::clear_has_k() {
  _has_bits_[0] &= ~0x00000008u;
}
void Request::clear_k() {
  k_ = 0;
  clear_has_k();
}
 ::google::protobuf::int32 Request::k() const {
  // @@protoc_insertion_point(field_get:Request.k)
  return k_;
}
 void Request::set_k(::google::protobuf::int32 value) {
  set_has_k();
  k_ = value;
  // @@protoc_insertion_point(field_set:Request.k)
}

// optional int32 s = 5;
bool Request::has_s() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Request::set_has_s() {
  _has_bits_[0] |= 0x00000010u;
}
void Request::clear_has_s() {
  _has_bits_[0] &= ~0x00000010u;
}
void Request::clear_s() {
  s_ = 0;
  clear_has_s();
}
 ::google::protobuf::int32 Request::s() const {
  // @@protoc_insertion_point(field_get:Request.s)
  return s_;
}
 void Request::set_s(::google::protobuf::int32 value) {
  set_has_s();
  s_ = value;
  // @@protoc_insertion_point(field_set:Request.s)
}

// optional int32 p = 6;
bool Request::has_p() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Request::set_has_p() {
  _has_bits_[0] |= 0x00000020u;
}
void Request::clear_has_p() {
  _has_bits_[0] &= ~0x00000020u;
}
void Request::clear_p() {
  p_ = 0;
  clear_has_p();
}
 ::google::protobuf::int32 Request::p() const {
  // @@protoc_insertion_point(field_get:Request.p)
  return p_;
}
 void Request::set_p(::google::protobuf::int32 value) {
  set_has_p();
  p_ = value;
  // @@protoc_insertion_point(field_set:Request.p)
}

// optional string a = 7;
bool Request::has_a() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Request::set_has_a() {
  _has_bits_[0] |= 0x00000040u;
}
void Request::clear_has_a() {
  _has_bits_[0] &= ~0x00000040u;
}
void Request::clear_a() {
  a_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_a();
}
 const ::std::string& Request::a() const {
  // @@protoc_insertion_point(field_get:Request.a)
  return a_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_a(const ::std::string& value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Request.a)
}
 void Request::set_a(const char* value) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Request.a)
}
 void Request::set_a(const char* value, size_t size) {
  set_has_a();
  a_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Request.a)
}
 ::std::string* Request::mutable_a() {
  set_has_a();
  // @@protoc_insertion_point(field_mutable:Request.a)
  return a_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Request::release_a() {
  clear_has_a();
  return a_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Request::set_allocated_a(::std::string* a) {
  if (a != NULL) {
    set_has_a();
  } else {
    clear_has_a();
  }
  a_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), a);
  // @@protoc_insertion_point(field_set_allocated:Request.a)
}

// optional int32 isalt = 8;
bool Request::has_isalt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Request::set_has_isalt() {
  _has_bits_[0] |= 0x00000080u;
}
void Request::clear_has_isalt() {
  _has_bits_[0] &= ~0x00000080u;
}
void Request::clear_isalt() {
  isalt_ = 0;
  clear_has_isalt();
}
 ::google::protobuf::int32 Request::isalt() const {
  // @@protoc_insertion_point(field_get:Request.isalt)
  return isalt_;
}
 void Request::set_isalt(::google::protobuf::int32 value) {
  set_has_isalt();
  isalt_ = value;
  // @@protoc_insertion_point(field_set:Request.isalt)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReadInfo::kGFieldNumber;
const int ReadInfo::kCFieldNumber;
const int ReadInfo::kLFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReadInfo::ReadInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReadInfo)
}

void ReadInfo::InitAsDefaultInstance() {
}

ReadInfo::ReadInfo(const ReadInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReadInfo)
}

void ReadInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  g_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_ = 0;
  l_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReadInfo::~ReadInfo() {
  // @@protoc_insertion_point(destructor:ReadInfo)
  SharedDtor();
}

void ReadInfo::SharedDtor() {
  g_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ReadInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReadInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReadInfo_descriptor_;
}

const ReadInfo& ReadInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ReadInfo* ReadInfo::default_instance_ = NULL;

ReadInfo* ReadInfo::New(::google::protobuf::Arena* arena) const {
  ReadInfo* n = new ReadInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReadInfo::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ReadInfo*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 7u) {
    ZR_(c_, l_);
    if (has_g()) {
      g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReadInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReadInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string g = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_g()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->g().data(), this->g().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ReadInfo.g");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_c;
        break;
      }

      // required int32 c = 2;
      case 2: {
        if (tag == 16) {
         parse_c:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_l;
        break;
      }

      // required int32 l = 3;
      case 3: {
        if (tag == 24) {
         parse_l:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &l_)));
          set_has_l();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReadInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReadInfo)
  return false;
#undef DO_
}

void ReadInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReadInfo)
  // required string g = 1;
  if (has_g()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->g().data(), this->g().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReadInfo.g");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->g(), output);
  }

  // required int32 c = 2;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->c(), output);
  }

  // required int32 l = 3;
  if (has_l()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->l(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReadInfo)
}

::google::protobuf::uint8* ReadInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReadInfo)
  // required string g = 1;
  if (has_g()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->g().data(), this->g().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ReadInfo.g");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->g(), target);
  }

  // required int32 c = 2;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->c(), target);
  }

  // required int32 l = 3;
  if (has_l()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->l(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReadInfo)
  return target;
}

int ReadInfo::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_g()) {
    // required string g = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->g());
  }

  if (has_c()) {
    // required int32 c = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }

  if (has_l()) {
    // required int32 l = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->l());
  }

  return total_size;
}
int ReadInfo::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string g = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->g());

    // required int32 c = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());

    // required int32 l = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->l());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReadInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReadInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReadInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReadInfo::MergeFrom(const ReadInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_g()) {
      set_has_g();
      g_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.g_);
    }
    if (from.has_c()) {
      set_c(from.c());
    }
    if (from.has_l()) {
      set_l(from.l());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReadInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReadInfo::CopyFrom(const ReadInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReadInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void ReadInfo::Swap(ReadInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReadInfo::InternalSwap(ReadInfo* other) {
  g_.Swap(&other->g_);
  std::swap(c_, other->c_);
  std::swap(l_, other->l_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReadInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReadInfo_descriptor_;
  metadata.reflection = ReadInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReadInfo

// required string g = 1;
bool ReadInfo::has_g() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReadInfo::set_has_g() {
  _has_bits_[0] |= 0x00000001u;
}
void ReadInfo::clear_has_g() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReadInfo::clear_g() {
  g_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_g();
}
 const ::std::string& ReadInfo::g() const {
  // @@protoc_insertion_point(field_get:ReadInfo.g)
  return g_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadInfo::set_g(const ::std::string& value) {
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ReadInfo.g)
}
 void ReadInfo::set_g(const char* value) {
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ReadInfo.g)
}
 void ReadInfo::set_g(const char* value, size_t size) {
  set_has_g();
  g_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ReadInfo.g)
}
 ::std::string* ReadInfo::mutable_g() {
  set_has_g();
  // @@protoc_insertion_point(field_mutable:ReadInfo.g)
  return g_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ReadInfo::release_g() {
  clear_has_g();
  return g_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ReadInfo::set_allocated_g(::std::string* g) {
  if (g != NULL) {
    set_has_g();
  } else {
    clear_has_g();
  }
  g_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), g);
  // @@protoc_insertion_point(field_set_allocated:ReadInfo.g)
}

// required int32 c = 2;
bool ReadInfo::has_c() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReadInfo::set_has_c() {
  _has_bits_[0] |= 0x00000002u;
}
void ReadInfo::clear_has_c() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReadInfo::clear_c() {
  c_ = 0;
  clear_has_c();
}
 ::google::protobuf::int32 ReadInfo::c() const {
  // @@protoc_insertion_point(field_get:ReadInfo.c)
  return c_;
}
 void ReadInfo::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:ReadInfo.c)
}

// required int32 l = 3;
bool ReadInfo::has_l() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void ReadInfo::set_has_l() {
  _has_bits_[0] |= 0x00000004u;
}
void ReadInfo::clear_has_l() {
  _has_bits_[0] &= ~0x00000004u;
}
void ReadInfo::clear_l() {
  l_ = 0;
  clear_has_l();
}
 ::google::protobuf::int32 ReadInfo::l() const {
  // @@protoc_insertion_point(field_get:ReadInfo.l)
  return l_;
}
 void ReadInfo::set_l(::google::protobuf::int32 value) {
  set_has_l();
  l_ = value;
  // @@protoc_insertion_point(field_set:ReadInfo.l)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultSamples::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultSamples::ResultSamples()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultSamples)
}

void ResultSamples::InitAsDefaultInstance() {
}

ResultSamples::ResultSamples(const ResultSamples& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultSamples)
}

void ResultSamples::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResultSamples::~ResultSamples() {
  // @@protoc_insertion_point(destructor:ResultSamples)
  SharedDtor();
}

void ResultSamples::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultSamples::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultSamples::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultSamples_descriptor_;
}

const ResultSamples& ResultSamples::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ResultSamples* ResultSamples::default_instance_ = NULL;

ResultSamples* ResultSamples::New(::google::protobuf::Arena* arena) const {
  ResultSamples* n = new ResultSamples;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultSamples::Clear() {
  s_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResultSamples::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultSamples)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ReadInfo s = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_s;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultSamples)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultSamples)
  return false;
#undef DO_
}

void ResultSamples::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultSamples)
  // repeated .ReadInfo s = 1;
  for (unsigned int i = 0, n = this->s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResultSamples)
}

::google::protobuf::uint8* ResultSamples::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultSamples)
  // repeated .ReadInfo s = 1;
  for (unsigned int i = 0, n = this->s_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultSamples)
  return target;
}

int ResultSamples::ByteSize() const {
  int total_size = 0;

  // repeated .ReadInfo s = 1;
  total_size += 1 * this->s_size();
  for (int i = 0; i < this->s_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->s(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultSamples::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResultSamples* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultSamples>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResultSamples::MergeFrom(const ResultSamples& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  s_.MergeFrom(from.s_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResultSamples::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultSamples::CopyFrom(const ResultSamples& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultSamples::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->s())) return false;
  return true;
}

void ResultSamples::Swap(ResultSamples* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultSamples::InternalSwap(ResultSamples* other) {
  s_.UnsafeArenaSwap(&other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultSamples::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultSamples_descriptor_;
  metadata.reflection = ResultSamples_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultSamples

// repeated .ReadInfo s = 1;
int ResultSamples::s_size() const {
  return s_.size();
}
void ResultSamples::clear_s() {
  s_.Clear();
}
const ::ReadInfo& ResultSamples::s(int index) const {
  // @@protoc_insertion_point(field_get:ResultSamples.s)
  return s_.Get(index);
}
::ReadInfo* ResultSamples::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:ResultSamples.s)
  return s_.Mutable(index);
}
::ReadInfo* ResultSamples::add_s() {
  // @@protoc_insertion_point(field_add:ResultSamples.s)
  return s_.Add();
}
::google::protobuf::RepeatedPtrField< ::ReadInfo >*
ResultSamples::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:ResultSamples.s)
  return &s_;
}
const ::google::protobuf::RepeatedPtrField< ::ReadInfo >&
ResultSamples::s() const {
  // @@protoc_insertion_point(field_list:ResultSamples.s)
  return s_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultAll::kRFieldNumber;
const int ResultAll::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultAll::ResultAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultAll)
}

void ResultAll::InitAsDefaultInstance() {
}

ResultAll::ResultAll(const ResultAll& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultAll)
}

void ResultAll::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResultAll::~ResultAll() {
  // @@protoc_insertion_point(destructor:ResultAll)
  SharedDtor();
}

void ResultAll::SharedDtor() {
  r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ResultAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultAll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultAll_descriptor_;
}

const ResultAll& ResultAll::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ResultAll* ResultAll::default_instance_ = NULL;

ResultAll* ResultAll::New(::google::protobuf::Arena* arena) const {
  ResultAll* n = new ResultAll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultAll::Clear() {
  if (has_r()) {
    r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  s_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResultAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string r = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_r()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->r().data(), this->r().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ResultAll.r");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_s;
        break;
      }

      // repeated .ReadInfo s = 2;
      case 2: {
        if (tag == 18) {
         parse_s:
          DO_(input->IncrementRecursionDepth());
         parse_loop_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_s;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultAll)
  return false;
#undef DO_
}

void ResultAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultAll)
  // required string r = 1;
  if (has_r()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->r().data(), this->r().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ResultAll.r");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->r(), output);
  }

  // repeated .ReadInfo s = 2;
  for (unsigned int i = 0, n = this->s_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResultAll)
}

::google::protobuf::uint8* ResultAll::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultAll)
  // required string r = 1;
  if (has_r()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->r().data(), this->r().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ResultAll.r");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->r(), target);
  }

  // repeated .ReadInfo s = 2;
  for (unsigned int i = 0, n = this->s_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultAll)
  return target;
}

int ResultAll::ByteSize() const {
  int total_size = 0;

  // required string r = 1;
  if (has_r()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->r());
  }
  // repeated .ReadInfo s = 2;
  total_size += 1 * this->s_size();
  for (int i = 0; i < this->s_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->s(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultAll::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResultAll* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultAll>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResultAll::MergeFrom(const ResultAll& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  s_.MergeFrom(from.s_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_r()) {
      set_has_r();
      r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResultAll::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultAll::CopyFrom(const ResultAll& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultAll::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->s())) return false;
  return true;
}

void ResultAll::Swap(ResultAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultAll::InternalSwap(ResultAll* other) {
  r_.Swap(&other->r_);
  s_.UnsafeArenaSwap(&other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultAll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultAll_descriptor_;
  metadata.reflection = ResultAll_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultAll

// required string r = 1;
bool ResultAll::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResultAll::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
void ResultAll::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResultAll::clear_r() {
  r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_r();
}
 const ::std::string& ResultAll::r() const {
  // @@protoc_insertion_point(field_get:ResultAll.r)
  return r_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultAll::set_r(const ::std::string& value) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResultAll.r)
}
 void ResultAll::set_r(const char* value) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResultAll.r)
}
 void ResultAll::set_r(const char* value, size_t size) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResultAll.r)
}
 ::std::string* ResultAll::mutable_r() {
  set_has_r();
  // @@protoc_insertion_point(field_mutable:ResultAll.r)
  return r_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResultAll::release_r() {
  clear_has_r();
  return r_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultAll::set_allocated_r(::std::string* r) {
  if (r != NULL) {
    set_has_r();
  } else {
    clear_has_r();
  }
  r_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), r);
  // @@protoc_insertion_point(field_set_allocated:ResultAll.r)
}

// repeated .ReadInfo s = 2;
int ResultAll::s_size() const {
  return s_.size();
}
void ResultAll::clear_s() {
  s_.Clear();
}
const ::ReadInfo& ResultAll::s(int index) const {
  // @@protoc_insertion_point(field_get:ResultAll.s)
  return s_.Get(index);
}
::ReadInfo* ResultAll::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:ResultAll.s)
  return s_.Mutable(index);
}
::ReadInfo* ResultAll::add_s() {
  // @@protoc_insertion_point(field_add:ResultAll.s)
  return s_.Add();
}
::google::protobuf::RepeatedPtrField< ::ReadInfo >*
ResultAll::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:ResultAll.s)
  return &s_;
}
const ::google::protobuf::RepeatedPtrField< ::ReadInfo >&
ResultAll::s() const {
  // @@protoc_insertion_point(field_list:ResultAll.s)
  return s_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultCount::kCFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultCount::ResultCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultCount)
}

void ResultCount::InitAsDefaultInstance() {
}

ResultCount::ResultCount(const ResultCount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultCount)
}

void ResultCount::SharedCtor() {
  _cached_size_ = 0;
  c_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResultCount::~ResultCount() {
  // @@protoc_insertion_point(destructor:ResultCount)
  SharedDtor();
}

void ResultCount::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ResultCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultCount_descriptor_;
}

const ResultCount& ResultCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ResultCount* ResultCount::default_instance_ = NULL;

ResultCount* ResultCount::New(::google::protobuf::Arena* arena) const {
  ResultCount* n = new ResultCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultCount::Clear() {
  c_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResultCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 c = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &c_)));
          set_has_c();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultCount)
  return false;
#undef DO_
}

void ResultCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultCount)
  // required int32 c = 1;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->c(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResultCount)
}

::google::protobuf::uint8* ResultCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultCount)
  // required int32 c = 1;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->c(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultCount)
  return target;
}

int ResultCount::ByteSize() const {
  int total_size = 0;

  // required int32 c = 1;
  if (has_c()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->c());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultCount::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResultCount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultCount>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResultCount::MergeFrom(const ResultCount& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_c()) {
      set_c(from.c());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResultCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultCount::CopyFrom(const ResultCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultCount::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResultCount::Swap(ResultCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultCount::InternalSwap(ResultCount* other) {
  std::swap(c_, other->c_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultCount_descriptor_;
  metadata.reflection = ResultCount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultCount

// required int32 c = 1;
bool ResultCount::has_c() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResultCount::set_has_c() {
  _has_bits_[0] |= 0x00000001u;
}
void ResultCount::clear_has_c() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResultCount::clear_c() {
  c_ = 0;
  clear_has_c();
}
 ::google::protobuf::int32 ResultCount::c() const {
  // @@protoc_insertion_point(field_get:ResultCount.c)
  return c_;
}
 void ResultCount::set_c(::google::protobuf::int32 value) {
  set_has_c();
  c_ = value;
  // @@protoc_insertion_point(field_set:ResultCount.c)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ResultReads::kRFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ResultReads::ResultReads()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ResultReads)
}

void ResultReads::InitAsDefaultInstance() {
}

ResultReads::ResultReads(const ResultReads& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ResultReads)
}

void ResultReads::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  r_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ResultReads::~ResultReads() {
  // @@protoc_insertion_point(destructor:ResultReads)
  SharedDtor();
}

void ResultReads::SharedDtor() {
  r_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ResultReads::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ResultReads::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ResultReads_descriptor_;
}

const ResultReads& ResultReads::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ResultReads* ResultReads::default_instance_ = NULL;

ResultReads* ResultReads::New(::google::protobuf::Arena* arena) const {
  ResultReads* n = new ResultReads;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ResultReads::Clear() {
  if (has_r()) {
    r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ResultReads::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ResultReads)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string r = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_r()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->r().data(), this->r().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "ResultReads.r");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ResultReads)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ResultReads)
  return false;
#undef DO_
}

void ResultReads::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ResultReads)
  // required string r = 1;
  if (has_r()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->r().data(), this->r().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ResultReads.r");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->r(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ResultReads)
}

::google::protobuf::uint8* ResultReads::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ResultReads)
  // required string r = 1;
  if (has_r()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->r().data(), this->r().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "ResultReads.r");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->r(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ResultReads)
  return target;
}

int ResultReads::ByteSize() const {
  int total_size = 0;

  // required string r = 1;
  if (has_r()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->r());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ResultReads::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ResultReads* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ResultReads>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ResultReads::MergeFrom(const ResultReads& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_r()) {
      set_has_r();
      r_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.r_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ResultReads::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ResultReads::CopyFrom(const ResultReads& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultReads::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ResultReads::Swap(ResultReads* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ResultReads::InternalSwap(ResultReads* other) {
  r_.Swap(&other->r_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ResultReads::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ResultReads_descriptor_;
  metadata.reflection = ResultReads_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ResultReads

// required string r = 1;
bool ResultReads::has_r() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ResultReads::set_has_r() {
  _has_bits_[0] |= 0x00000001u;
}
void ResultReads::clear_has_r() {
  _has_bits_[0] &= ~0x00000001u;
}
void ResultReads::clear_r() {
  r_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_r();
}
 const ::std::string& ResultReads::r() const {
  // @@protoc_insertion_point(field_get:ResultReads.r)
  return r_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultReads::set_r(const ::std::string& value) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:ResultReads.r)
}
 void ResultReads::set_r(const char* value) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:ResultReads.r)
}
 void ResultReads::set_r(const char* value, size_t size) {
  set_has_r();
  r_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:ResultReads.r)
}
 ::std::string* ResultReads::mutable_r() {
  set_has_r();
  // @@protoc_insertion_point(field_mutable:ResultReads.r)
  return r_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ResultReads::release_r() {
  clear_has_r();
  return r_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ResultReads::set_allocated_r(::std::string* r) {
  if (r != NULL) {
    set_has_r();
  } else {
    clear_has_r();
  }
  r_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), r);
  // @@protoc_insertion_point(field_set_allocated:ResultReads.r)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Reply_RequestType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_RequestType_descriptor_;
}
bool Reply_RequestType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Reply_RequestType Reply::CountReads;
const Reply_RequestType Reply::ExactMatch;
const Reply_RequestType Reply::KmerMatch;
const Reply_RequestType Reply::SiteMatch;
const Reply_RequestType Reply::RequestType_MIN;
const Reply_RequestType Reply::RequestType_MAX;
const int Reply::RequestType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Reply_ReplyType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_ReplyType_descriptor_;
}
bool Reply_ReplyType_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Reply_ReplyType Reply::ReplyCount;
const Reply_ReplyType Reply::ReplyReads;
const Reply_ReplyType Reply::ReplyAll;
const Reply_ReplyType Reply::ResultSamples;
const Reply_ReplyType Reply::ReplyType_MIN;
const Reply_ReplyType Reply::ReplyType_MAX;
const int Reply::ReplyType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reply::kRtFieldNumber;
const int Reply::kTFieldNumber;
const int Reply::kQFieldNumber;
const int Reply::kCFieldNumber;
const int Reply::kRFieldNumber;
const int Reply::kAFieldNumber;
const int Reply::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reply::Reply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:Reply)
}

void Reply::InitAsDefaultInstance() {
  c_ = const_cast< ::ReplyCount*>(&::ReplyCount::default_instance());
  r_ = const_cast< ::ReplyReads*>(&::ReplyReads::default_instance());
  a_ = const_cast< ::ReplyAll*>(&::ReplyAll::default_instance());
  s_ = const_cast< ::ResultSamples*>(&::ResultSamples::default_instance());
}

Reply::Reply(const Reply& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:Reply)
}

void Reply::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  rt_ = 1;
  t_ = 1;
  q_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  c_ = NULL;
  r_ = NULL;
  a_ = NULL;
  s_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Reply::~Reply() {
  // @@protoc_insertion_point(destructor:Reply)
  SharedDtor();
}

void Reply::SharedDtor() {
  q_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete c_;
    delete r_;
    delete a_;
    delete s_;
  }
}

void Reply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reply::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Reply_descriptor_;
}

const Reply& Reply::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

Reply* Reply::default_instance_ = NULL;

Reply* Reply::New(::google::protobuf::Arena* arena) const {
  Reply* n = new Reply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Reply::Clear() {
  if (_has_bits_[0 / 32] & 127u) {
    rt_ = 1;
    t_ = 1;
    if (has_q()) {
      q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_c()) {
      if (c_ != NULL) c_->::ReplyCount::Clear();
    }
    if (has_r()) {
      if (r_ != NULL) r_->::ReplyReads::Clear();
    }
    if (has_a()) {
      if (a_ != NULL) a_->::ReplyAll::Clear();
    }
    if (has_s()) {
      if (s_ != NULL) s_->::ResultSamples::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Reply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Reply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .Reply.RequestType rt = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Reply_RequestType_IsValid(value)) {
            set_rt(static_cast< ::Reply_RequestType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_t;
        break;
      }

      // required .Reply.ReplyType t = 2;
      case 2: {
        if (tag == 16) {
         parse_t:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::Reply_ReplyType_IsValid(value)) {
            set_t(static_cast< ::Reply_ReplyType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_q;
        break;
      }

      // required string q = 3;
      case 3: {
        if (tag == 26) {
         parse_q:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_q()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->q().data(), this->q().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "Reply.q");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_c;
        break;
      }

      // optional .ReplyCount c = 4;
      case 4: {
        if (tag == 34) {
         parse_c:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_c()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_r;
        break;
      }

      // optional .ReplyReads r = 5;
      case 5: {
        if (tag == 42) {
         parse_r:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_r()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_a;
        break;
      }

      // optional .ReplyAll a = 6;
      case 6: {
        if (tag == 50) {
         parse_a:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_a()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_s;
        break;
      }

      // optional .ResultSamples s = 7;
      case 7: {
        if (tag == 58) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Reply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Reply)
  return false;
#undef DO_
}

void Reply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Reply)
  // required .Reply.RequestType rt = 1;
  if (has_rt()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->rt(), output);
  }

  // required .Reply.ReplyType t = 2;
  if (has_t()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->t(), output);
  }

  // required string q = 3;
  if (has_q()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->q().data(), this->q().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Reply.q");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->q(), output);
  }

  // optional .ReplyCount c = 4;
  if (has_c()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->c_, output);
  }

  // optional .ReplyReads r = 5;
  if (has_r()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->r_, output);
  }

  // optional .ReplyAll a = 6;
  if (has_a()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->a_, output);
  }

  // optional .ResultSamples s = 7;
  if (has_s()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->s_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:Reply)
}

::google::protobuf::uint8* Reply::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:Reply)
  // required .Reply.RequestType rt = 1;
  if (has_rt()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->rt(), target);
  }

  // required .Reply.ReplyType t = 2;
  if (has_t()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->t(), target);
  }

  // required string q = 3;
  if (has_q()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->q().data(), this->q().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "Reply.q");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->q(), target);
  }

  // optional .ReplyCount c = 4;
  if (has_c()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->c_, target);
  }

  // optional .ReplyReads r = 5;
  if (has_r()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->r_, target);
  }

  // optional .ReplyAll a = 6;
  if (has_a()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, *this->a_, target);
  }

  // optional .ResultSamples s = 7;
  if (has_s()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, *this->s_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Reply)
  return target;
}

int Reply::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_rt()) {
    // required .Reply.RequestType rt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rt());
  }

  if (has_t()) {
    // required .Reply.ReplyType t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->t());
  }

  if (has_q()) {
    // required string q = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->q());
  }

  return total_size;
}
int Reply::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .Reply.RequestType rt = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->rt());

    // required .Reply.ReplyType t = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->t());

    // required string q = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->q());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[3 / 32] & 120u) {
    // optional .ReplyCount c = 4;
    if (has_c()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->c_);
    }

    // optional .ReplyReads r = 5;
    if (has_r()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->r_);
    }

    // optional .ReplyAll a = 6;
    if (has_a()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->a_);
    }

    // optional .ResultSamples s = 7;
    if (has_s()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->s_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Reply::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Reply* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Reply>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Reply::MergeFrom(const Reply& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_rt()) {
      set_rt(from.rt());
    }
    if (from.has_t()) {
      set_t(from.t());
    }
    if (from.has_q()) {
      set_has_q();
      q_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.q_);
    }
    if (from.has_c()) {
      mutable_c()->::ReplyCount::MergeFrom(from.c());
    }
    if (from.has_r()) {
      mutable_r()->::ReplyReads::MergeFrom(from.r());
    }
    if (from.has_a()) {
      mutable_a()->::ReplyAll::MergeFrom(from.a());
    }
    if (from.has_s()) {
      mutable_s()->::ResultSamples::MergeFrom(from.s());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Reply::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Reply::CopyFrom(const Reply& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Reply::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_c()) {
    if (!this->c_->IsInitialized()) return false;
  }
  if (has_r()) {
    if (!this->r_->IsInitialized()) return false;
  }
  if (has_a()) {
    if (!this->a_->IsInitialized()) return false;
  }
  if (has_s()) {
    if (!this->s_->IsInitialized()) return false;
  }
  return true;
}

void Reply::Swap(Reply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Reply::InternalSwap(Reply* other) {
  std::swap(rt_, other->rt_);
  std::swap(t_, other->t_);
  q_.Swap(&other->q_);
  std::swap(c_, other->c_);
  std::swap(r_, other->r_);
  std::swap(a_, other->a_);
  std::swap(s_, other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reply::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Reply_descriptor_;
  metadata.reflection = Reply_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reply

// required .Reply.RequestType rt = 1;
bool Reply::has_rt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Reply::set_has_rt() {
  _has_bits_[0] |= 0x00000001u;
}
void Reply::clear_has_rt() {
  _has_bits_[0] &= ~0x00000001u;
}
void Reply::clear_rt() {
  rt_ = 1;
  clear_has_rt();
}
 ::Reply_RequestType Reply::rt() const {
  // @@protoc_insertion_point(field_get:Reply.rt)
  return static_cast< ::Reply_RequestType >(rt_);
}
 void Reply::set_rt(::Reply_RequestType value) {
  assert(::Reply_RequestType_IsValid(value));
  set_has_rt();
  rt_ = value;
  // @@protoc_insertion_point(field_set:Reply.rt)
}

// required .Reply.ReplyType t = 2;
bool Reply::has_t() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Reply::set_has_t() {
  _has_bits_[0] |= 0x00000002u;
}
void Reply::clear_has_t() {
  _has_bits_[0] &= ~0x00000002u;
}
void Reply::clear_t() {
  t_ = 1;
  clear_has_t();
}
 ::Reply_ReplyType Reply::t() const {
  // @@protoc_insertion_point(field_get:Reply.t)
  return static_cast< ::Reply_ReplyType >(t_);
}
 void Reply::set_t(::Reply_ReplyType value) {
  assert(::Reply_ReplyType_IsValid(value));
  set_has_t();
  t_ = value;
  // @@protoc_insertion_point(field_set:Reply.t)
}

// required string q = 3;
bool Reply::has_q() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Reply::set_has_q() {
  _has_bits_[0] |= 0x00000004u;
}
void Reply::clear_has_q() {
  _has_bits_[0] &= ~0x00000004u;
}
void Reply::clear_q() {
  q_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_q();
}
 const ::std::string& Reply::q() const {
  // @@protoc_insertion_point(field_get:Reply.q)
  return q_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Reply::set_q(const ::std::string& value) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:Reply.q)
}
 void Reply::set_q(const char* value) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:Reply.q)
}
 void Reply::set_q(const char* value, size_t size) {
  set_has_q();
  q_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:Reply.q)
}
 ::std::string* Reply::mutable_q() {
  set_has_q();
  // @@protoc_insertion_point(field_mutable:Reply.q)
  return q_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Reply::release_q() {
  clear_has_q();
  return q_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Reply::set_allocated_q(::std::string* q) {
  if (q != NULL) {
    set_has_q();
  } else {
    clear_has_q();
  }
  q_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), q);
  // @@protoc_insertion_point(field_set_allocated:Reply.q)
}

// optional .ReplyCount c = 4;
bool Reply::has_c() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Reply::set_has_c() {
  _has_bits_[0] |= 0x00000008u;
}
void Reply::clear_has_c() {
  _has_bits_[0] &= ~0x00000008u;
}
void Reply::clear_c() {
  if (c_ != NULL) c_->::ReplyCount::Clear();
  clear_has_c();
}
const ::ReplyCount& Reply::c() const {
  // @@protoc_insertion_point(field_get:Reply.c)
  return c_ != NULL ? *c_ : *default_instance_->c_;
}
::ReplyCount* Reply::mutable_c() {
  set_has_c();
  if (c_ == NULL) {
    c_ = new ::ReplyCount;
  }
  // @@protoc_insertion_point(field_mutable:Reply.c)
  return c_;
}
::ReplyCount* Reply::release_c() {
  clear_has_c();
  ::ReplyCount* temp = c_;
  c_ = NULL;
  return temp;
}
void Reply::set_allocated_c(::ReplyCount* c) {
  delete c_;
  c_ = c;
  if (c) {
    set_has_c();
  } else {
    clear_has_c();
  }
  // @@protoc_insertion_point(field_set_allocated:Reply.c)
}

// optional .ReplyReads r = 5;
bool Reply::has_r() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Reply::set_has_r() {
  _has_bits_[0] |= 0x00000010u;
}
void Reply::clear_has_r() {
  _has_bits_[0] &= ~0x00000010u;
}
void Reply::clear_r() {
  if (r_ != NULL) r_->::ReplyReads::Clear();
  clear_has_r();
}
const ::ReplyReads& Reply::r() const {
  // @@protoc_insertion_point(field_get:Reply.r)
  return r_ != NULL ? *r_ : *default_instance_->r_;
}
::ReplyReads* Reply::mutable_r() {
  set_has_r();
  if (r_ == NULL) {
    r_ = new ::ReplyReads;
  }
  // @@protoc_insertion_point(field_mutable:Reply.r)
  return r_;
}
::ReplyReads* Reply::release_r() {
  clear_has_r();
  ::ReplyReads* temp = r_;
  r_ = NULL;
  return temp;
}
void Reply::set_allocated_r(::ReplyReads* r) {
  delete r_;
  r_ = r;
  if (r) {
    set_has_r();
  } else {
    clear_has_r();
  }
  // @@protoc_insertion_point(field_set_allocated:Reply.r)
}

// optional .ReplyAll a = 6;
bool Reply::has_a() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Reply::set_has_a() {
  _has_bits_[0] |= 0x00000020u;
}
void Reply::clear_has_a() {
  _has_bits_[0] &= ~0x00000020u;
}
void Reply::clear_a() {
  if (a_ != NULL) a_->::ReplyAll::Clear();
  clear_has_a();
}
const ::ReplyAll& Reply::a() const {
  // @@protoc_insertion_point(field_get:Reply.a)
  return a_ != NULL ? *a_ : *default_instance_->a_;
}
::ReplyAll* Reply::mutable_a() {
  set_has_a();
  if (a_ == NULL) {
    a_ = new ::ReplyAll;
  }
  // @@protoc_insertion_point(field_mutable:Reply.a)
  return a_;
}
::ReplyAll* Reply::release_a() {
  clear_has_a();
  ::ReplyAll* temp = a_;
  a_ = NULL;
  return temp;
}
void Reply::set_allocated_a(::ReplyAll* a) {
  delete a_;
  a_ = a;
  if (a) {
    set_has_a();
  } else {
    clear_has_a();
  }
  // @@protoc_insertion_point(field_set_allocated:Reply.a)
}

// optional .ResultSamples s = 7;
bool Reply::has_s() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Reply::set_has_s() {
  _has_bits_[0] |= 0x00000040u;
}
void Reply::clear_has_s() {
  _has_bits_[0] &= ~0x00000040u;
}
void Reply::clear_s() {
  if (s_ != NULL) s_->::ResultSamples::Clear();
  clear_has_s();
}
const ::ResultSamples& Reply::s() const {
  // @@protoc_insertion_point(field_get:Reply.s)
  return s_ != NULL ? *s_ : *default_instance_->s_;
}
::ResultSamples* Reply::mutable_s() {
  set_has_s();
  if (s_ == NULL) {
    s_ = new ::ResultSamples;
  }
  // @@protoc_insertion_point(field_mutable:Reply.s)
  return s_;
}
::ResultSamples* Reply::release_s() {
  clear_has_s();
  ::ResultSamples* temp = s_;
  s_ = NULL;
  return temp;
}
void Reply::set_allocated_s(::ResultSamples* s) {
  delete s_;
  s_ = s;
  if (s) {
    set_has_s();
  } else {
    clear_has_s();
  }
  // @@protoc_insertion_point(field_set_allocated:Reply.s)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyAll::kForwardMatchesFieldNumber;
const int ReplyAll::kRevcompMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyAll::ReplyAll()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReplyAll)
}

void ReplyAll::InitAsDefaultInstance() {
}

ReplyAll::ReplyAll(const ReplyAll& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReplyAll)
}

void ReplyAll::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyAll::~ReplyAll() {
  // @@protoc_insertion_point(destructor:ReplyAll)
  SharedDtor();
}

void ReplyAll::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReplyAll::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyAll::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyAll_descriptor_;
}

const ReplyAll& ReplyAll::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ReplyAll* ReplyAll::default_instance_ = NULL;

ReplyAll* ReplyAll::New(::google::protobuf::Arena* arena) const {
  ReplyAll* n = new ReplyAll;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyAll::Clear() {
  forward_matches_.Clear();
  revcomp_matches_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReplyAll::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReplyAll)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ResultAll forward_matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_forward_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_forward_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_forward_matches;
        if (input->ExpectTag(18)) goto parse_loop_revcomp_matches;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ResultAll revcomp_matches = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_revcomp_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_revcomp_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_revcomp_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReplyAll)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReplyAll)
  return false;
#undef DO_
}

void ReplyAll::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReplyAll)
  // repeated .ResultAll forward_matches = 1;
  for (unsigned int i = 0, n = this->forward_matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->forward_matches(i), output);
  }

  // repeated .ResultAll revcomp_matches = 2;
  for (unsigned int i = 0, n = this->revcomp_matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->revcomp_matches(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReplyAll)
}

::google::protobuf::uint8* ReplyAll::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReplyAll)
  // repeated .ResultAll forward_matches = 1;
  for (unsigned int i = 0, n = this->forward_matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->forward_matches(i), target);
  }

  // repeated .ResultAll revcomp_matches = 2;
  for (unsigned int i = 0, n = this->revcomp_matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->revcomp_matches(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReplyAll)
  return target;
}

int ReplyAll::ByteSize() const {
  int total_size = 0;

  // repeated .ResultAll forward_matches = 1;
  total_size += 1 * this->forward_matches_size();
  for (int i = 0; i < this->forward_matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forward_matches(i));
  }

  // repeated .ResultAll revcomp_matches = 2;
  total_size += 1 * this->revcomp_matches_size();
  for (int i = 0; i < this->revcomp_matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->revcomp_matches(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyAll::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReplyAll* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyAll>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyAll::MergeFrom(const ReplyAll& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  forward_matches_.MergeFrom(from.forward_matches_);
  revcomp_matches_.MergeFrom(from.revcomp_matches_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReplyAll::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyAll::CopyFrom(const ReplyAll& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyAll::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->forward_matches())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->revcomp_matches())) return false;
  return true;
}

void ReplyAll::Swap(ReplyAll* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyAll::InternalSwap(ReplyAll* other) {
  forward_matches_.UnsafeArenaSwap(&other->forward_matches_);
  revcomp_matches_.UnsafeArenaSwap(&other->revcomp_matches_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyAll::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyAll_descriptor_;
  metadata.reflection = ReplyAll_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplyAll

// repeated .ResultAll forward_matches = 1;
int ReplyAll::forward_matches_size() const {
  return forward_matches_.size();
}
void ReplyAll::clear_forward_matches() {
  forward_matches_.Clear();
}
const ::ResultAll& ReplyAll::forward_matches(int index) const {
  // @@protoc_insertion_point(field_get:ReplyAll.forward_matches)
  return forward_matches_.Get(index);
}
::ResultAll* ReplyAll::mutable_forward_matches(int index) {
  // @@protoc_insertion_point(field_mutable:ReplyAll.forward_matches)
  return forward_matches_.Mutable(index);
}
::ResultAll* ReplyAll::add_forward_matches() {
  // @@protoc_insertion_point(field_add:ReplyAll.forward_matches)
  return forward_matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultAll >*
ReplyAll::mutable_forward_matches() {
  // @@protoc_insertion_point(field_mutable_list:ReplyAll.forward_matches)
  return &forward_matches_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultAll >&
ReplyAll::forward_matches() const {
  // @@protoc_insertion_point(field_list:ReplyAll.forward_matches)
  return forward_matches_;
}

// repeated .ResultAll revcomp_matches = 2;
int ReplyAll::revcomp_matches_size() const {
  return revcomp_matches_.size();
}
void ReplyAll::clear_revcomp_matches() {
  revcomp_matches_.Clear();
}
const ::ResultAll& ReplyAll::revcomp_matches(int index) const {
  // @@protoc_insertion_point(field_get:ReplyAll.revcomp_matches)
  return revcomp_matches_.Get(index);
}
::ResultAll* ReplyAll::mutable_revcomp_matches(int index) {
  // @@protoc_insertion_point(field_mutable:ReplyAll.revcomp_matches)
  return revcomp_matches_.Mutable(index);
}
::ResultAll* ReplyAll::add_revcomp_matches() {
  // @@protoc_insertion_point(field_add:ReplyAll.revcomp_matches)
  return revcomp_matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultAll >*
ReplyAll::mutable_revcomp_matches() {
  // @@protoc_insertion_point(field_mutable_list:ReplyAll.revcomp_matches)
  return &revcomp_matches_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultAll >&
ReplyAll::revcomp_matches() const {
  // @@protoc_insertion_point(field_list:ReplyAll.revcomp_matches)
  return revcomp_matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyCount::kForwardMatchesFieldNumber;
const int ReplyCount::kRevcompMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyCount::ReplyCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReplyCount)
}

void ReplyCount::InitAsDefaultInstance() {
  forward_matches_ = const_cast< ::ResultCount*>(&::ResultCount::default_instance());
  revcomp_matches_ = const_cast< ::ResultCount*>(&::ResultCount::default_instance());
}

ReplyCount::ReplyCount(const ReplyCount& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReplyCount)
}

void ReplyCount::SharedCtor() {
  _cached_size_ = 0;
  forward_matches_ = NULL;
  revcomp_matches_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyCount::~ReplyCount() {
  // @@protoc_insertion_point(destructor:ReplyCount)
  SharedDtor();
}

void ReplyCount::SharedDtor() {
  if (this != default_instance_) {
    delete forward_matches_;
    delete revcomp_matches_;
  }
}

void ReplyCount::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyCount::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyCount_descriptor_;
}

const ReplyCount& ReplyCount::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ReplyCount* ReplyCount::default_instance_ = NULL;

ReplyCount* ReplyCount::New(::google::protobuf::Arena* arena) const {
  ReplyCount* n = new ReplyCount;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyCount::Clear() {
  if (_has_bits_[0 / 32] & 3u) {
    if (has_forward_matches()) {
      if (forward_matches_ != NULL) forward_matches_->::ResultCount::Clear();
    }
    if (has_revcomp_matches()) {
      if (revcomp_matches_ != NULL) revcomp_matches_->::ResultCount::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReplyCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReplyCount)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .ResultCount forward_matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_forward_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_revcomp_matches;
        break;
      }

      // optional .ResultCount revcomp_matches = 2;
      case 2: {
        if (tag == 18) {
         parse_revcomp_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_revcomp_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReplyCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReplyCount)
  return false;
#undef DO_
}

void ReplyCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReplyCount)
  // optional .ResultCount forward_matches = 1;
  if (has_forward_matches()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->forward_matches_, output);
  }

  // optional .ResultCount revcomp_matches = 2;
  if (has_revcomp_matches()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->revcomp_matches_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReplyCount)
}

::google::protobuf::uint8* ReplyCount::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReplyCount)
  // optional .ResultCount forward_matches = 1;
  if (has_forward_matches()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->forward_matches_, target);
  }

  // optional .ResultCount revcomp_matches = 2;
  if (has_revcomp_matches()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->revcomp_matches_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReplyCount)
  return target;
}

int ReplyCount::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 3u) {
    // optional .ResultCount forward_matches = 1;
    if (has_forward_matches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->forward_matches_);
    }

    // optional .ResultCount revcomp_matches = 2;
    if (has_revcomp_matches()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->revcomp_matches_);
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyCount::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReplyCount* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyCount>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyCount::MergeFrom(const ReplyCount& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_forward_matches()) {
      mutable_forward_matches()->::ResultCount::MergeFrom(from.forward_matches());
    }
    if (from.has_revcomp_matches()) {
      mutable_revcomp_matches()->::ResultCount::MergeFrom(from.revcomp_matches());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReplyCount::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyCount::CopyFrom(const ReplyCount& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyCount::IsInitialized() const {

  if (has_forward_matches()) {
    if (!this->forward_matches_->IsInitialized()) return false;
  }
  if (has_revcomp_matches()) {
    if (!this->revcomp_matches_->IsInitialized()) return false;
  }
  return true;
}

void ReplyCount::Swap(ReplyCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyCount::InternalSwap(ReplyCount* other) {
  std::swap(forward_matches_, other->forward_matches_);
  std::swap(revcomp_matches_, other->revcomp_matches_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyCount::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyCount_descriptor_;
  metadata.reflection = ReplyCount_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplyCount

// optional .ResultCount forward_matches = 1;
bool ReplyCount::has_forward_matches() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ReplyCount::set_has_forward_matches() {
  _has_bits_[0] |= 0x00000001u;
}
void ReplyCount::clear_has_forward_matches() {
  _has_bits_[0] &= ~0x00000001u;
}
void ReplyCount::clear_forward_matches() {
  if (forward_matches_ != NULL) forward_matches_->::ResultCount::Clear();
  clear_has_forward_matches();
}
const ::ResultCount& ReplyCount::forward_matches() const {
  // @@protoc_insertion_point(field_get:ReplyCount.forward_matches)
  return forward_matches_ != NULL ? *forward_matches_ : *default_instance_->forward_matches_;
}
::ResultCount* ReplyCount::mutable_forward_matches() {
  set_has_forward_matches();
  if (forward_matches_ == NULL) {
    forward_matches_ = new ::ResultCount;
  }
  // @@protoc_insertion_point(field_mutable:ReplyCount.forward_matches)
  return forward_matches_;
}
::ResultCount* ReplyCount::release_forward_matches() {
  clear_has_forward_matches();
  ::ResultCount* temp = forward_matches_;
  forward_matches_ = NULL;
  return temp;
}
void ReplyCount::set_allocated_forward_matches(::ResultCount* forward_matches) {
  delete forward_matches_;
  forward_matches_ = forward_matches;
  if (forward_matches) {
    set_has_forward_matches();
  } else {
    clear_has_forward_matches();
  }
  // @@protoc_insertion_point(field_set_allocated:ReplyCount.forward_matches)
}

// optional .ResultCount revcomp_matches = 2;
bool ReplyCount::has_revcomp_matches() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void ReplyCount::set_has_revcomp_matches() {
  _has_bits_[0] |= 0x00000002u;
}
void ReplyCount::clear_has_revcomp_matches() {
  _has_bits_[0] &= ~0x00000002u;
}
void ReplyCount::clear_revcomp_matches() {
  if (revcomp_matches_ != NULL) revcomp_matches_->::ResultCount::Clear();
  clear_has_revcomp_matches();
}
const ::ResultCount& ReplyCount::revcomp_matches() const {
  // @@protoc_insertion_point(field_get:ReplyCount.revcomp_matches)
  return revcomp_matches_ != NULL ? *revcomp_matches_ : *default_instance_->revcomp_matches_;
}
::ResultCount* ReplyCount::mutable_revcomp_matches() {
  set_has_revcomp_matches();
  if (revcomp_matches_ == NULL) {
    revcomp_matches_ = new ::ResultCount;
  }
  // @@protoc_insertion_point(field_mutable:ReplyCount.revcomp_matches)
  return revcomp_matches_;
}
::ResultCount* ReplyCount::release_revcomp_matches() {
  clear_has_revcomp_matches();
  ::ResultCount* temp = revcomp_matches_;
  revcomp_matches_ = NULL;
  return temp;
}
void ReplyCount::set_allocated_revcomp_matches(::ResultCount* revcomp_matches) {
  delete revcomp_matches_;
  revcomp_matches_ = revcomp_matches;
  if (revcomp_matches) {
    set_has_revcomp_matches();
  } else {
    clear_has_revcomp_matches();
  }
  // @@protoc_insertion_point(field_set_allocated:ReplyCount.revcomp_matches)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ReplyReads::kForwardMatchesFieldNumber;
const int ReplyReads::kRevcompMatchesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ReplyReads::ReplyReads()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ReplyReads)
}

void ReplyReads::InitAsDefaultInstance() {
}

ReplyReads::ReplyReads(const ReplyReads& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:ReplyReads)
}

void ReplyReads::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ReplyReads::~ReplyReads() {
  // @@protoc_insertion_point(destructor:ReplyReads)
  SharedDtor();
}

void ReplyReads::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ReplyReads::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ReplyReads::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ReplyReads_descriptor_;
}

const ReplyReads& ReplyReads::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_readserver_2eproto();
  return *default_instance_;
}

ReplyReads* ReplyReads::default_instance_ = NULL;

ReplyReads* ReplyReads::New(::google::protobuf::Arena* arena) const {
  ReplyReads* n = new ReplyReads;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ReplyReads::Clear() {
  forward_matches_.Clear();
  revcomp_matches_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ReplyReads::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ReplyReads)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ResultReads forward_matches = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_forward_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_forward_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_forward_matches;
        if (input->ExpectTag(18)) goto parse_loop_revcomp_matches;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .ResultReads revcomp_matches = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_revcomp_matches:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_revcomp_matches()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_revcomp_matches;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ReplyReads)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ReplyReads)
  return false;
#undef DO_
}

void ReplyReads::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ReplyReads)
  // repeated .ResultReads forward_matches = 1;
  for (unsigned int i = 0, n = this->forward_matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->forward_matches(i), output);
  }

  // repeated .ResultReads revcomp_matches = 2;
  for (unsigned int i = 0, n = this->revcomp_matches_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->revcomp_matches(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:ReplyReads)
}

::google::protobuf::uint8* ReplyReads::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:ReplyReads)
  // repeated .ResultReads forward_matches = 1;
  for (unsigned int i = 0, n = this->forward_matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->forward_matches(i), target);
  }

  // repeated .ResultReads revcomp_matches = 2;
  for (unsigned int i = 0, n = this->revcomp_matches_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->revcomp_matches(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ReplyReads)
  return target;
}

int ReplyReads::ByteSize() const {
  int total_size = 0;

  // repeated .ResultReads forward_matches = 1;
  total_size += 1 * this->forward_matches_size();
  for (int i = 0; i < this->forward_matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->forward_matches(i));
  }

  // repeated .ResultReads revcomp_matches = 2;
  total_size += 1 * this->revcomp_matches_size();
  for (int i = 0; i < this->revcomp_matches_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->revcomp_matches(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ReplyReads::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ReplyReads* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ReplyReads>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ReplyReads::MergeFrom(const ReplyReads& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  forward_matches_.MergeFrom(from.forward_matches_);
  revcomp_matches_.MergeFrom(from.revcomp_matches_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ReplyReads::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplyReads::CopyFrom(const ReplyReads& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplyReads::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->forward_matches())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->revcomp_matches())) return false;
  return true;
}

void ReplyReads::Swap(ReplyReads* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ReplyReads::InternalSwap(ReplyReads* other) {
  forward_matches_.UnsafeArenaSwap(&other->forward_matches_);
  revcomp_matches_.UnsafeArenaSwap(&other->revcomp_matches_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ReplyReads::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ReplyReads_descriptor_;
  metadata.reflection = ReplyReads_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ReplyReads

// repeated .ResultReads forward_matches = 1;
int ReplyReads::forward_matches_size() const {
  return forward_matches_.size();
}
void ReplyReads::clear_forward_matches() {
  forward_matches_.Clear();
}
const ::ResultReads& ReplyReads::forward_matches(int index) const {
  // @@protoc_insertion_point(field_get:ReplyReads.forward_matches)
  return forward_matches_.Get(index);
}
::ResultReads* ReplyReads::mutable_forward_matches(int index) {
  // @@protoc_insertion_point(field_mutable:ReplyReads.forward_matches)
  return forward_matches_.Mutable(index);
}
::ResultReads* ReplyReads::add_forward_matches() {
  // @@protoc_insertion_point(field_add:ReplyReads.forward_matches)
  return forward_matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultReads >*
ReplyReads::mutable_forward_matches() {
  // @@protoc_insertion_point(field_mutable_list:ReplyReads.forward_matches)
  return &forward_matches_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultReads >&
ReplyReads::forward_matches() const {
  // @@protoc_insertion_point(field_list:ReplyReads.forward_matches)
  return forward_matches_;
}

// repeated .ResultReads revcomp_matches = 2;
int ReplyReads::revcomp_matches_size() const {
  return revcomp_matches_.size();
}
void ReplyReads::clear_revcomp_matches() {
  revcomp_matches_.Clear();
}
const ::ResultReads& ReplyReads::revcomp_matches(int index) const {
  // @@protoc_insertion_point(field_get:ReplyReads.revcomp_matches)
  return revcomp_matches_.Get(index);
}
::ResultReads* ReplyReads::mutable_revcomp_matches(int index) {
  // @@protoc_insertion_point(field_mutable:ReplyReads.revcomp_matches)
  return revcomp_matches_.Mutable(index);
}
::ResultReads* ReplyReads::add_revcomp_matches() {
  // @@protoc_insertion_point(field_add:ReplyReads.revcomp_matches)
  return revcomp_matches_.Add();
}
::google::protobuf::RepeatedPtrField< ::ResultReads >*
ReplyReads::mutable_revcomp_matches() {
  // @@protoc_insertion_point(field_mutable_list:ReplyReads.revcomp_matches)
  return &revcomp_matches_;
}
const ::google::protobuf::RepeatedPtrField< ::ResultReads >&
ReplyReads::revcomp_matches() const {
  // @@protoc_insertion_point(field_list:ReplyReads.revcomp_matches)
  return revcomp_matches_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
